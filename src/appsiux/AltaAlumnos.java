
package appsiux;

import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;

import javax.swing.WindowConstants;


public class AltaAlumnos extends javax.swing.JFrame {
     static MateriaListModel list_model = new MateriaListModel();//Arraylist de materias del alumno
     MateriaListModel listMateria;//Arraylist de materias existentes en el sistema
     AlumnoListModel listAlumno;//Arraylist de alumnos
     int seleccionAlum;
     
     public AltaAlumnos(int seleccionAlum, MateriaListModel listMateria, AlumnoListModel listAlumno) {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Materias");
        setDefaultCloseOperation (WindowConstants.DISPOSE_ON_CLOSE);
        this.seleccionAlum = seleccionAlum;
        this.listMateria = listMateria;
        this.listAlumno  = listAlumno;
       
        list_model = listAlumno.getAlumno(seleccionAlum).getMaterias(); //pasamos el MateriaListModel que es atributo del alumno
        listCarga.setModel(list_model);// le asignamos el materialistmodel a nuestra lista de materias propia del alumno
        listMateria2.setModel(listMateria);
     }
    
    
    public AltaAlumnos() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Materias");
        setDefaultCloseOperation (WindowConstants.DISPOSE_ON_CLOSE);
    }
    
     int contador = 0;
    
    public void verificar(int seleccionMateria){
              
    for (Materia m : list_model.getListMateria()) {
        if (m.getId().equals(listMateria.getMateria(seleccionMateria).getId())) {
             contador++;
            JOptionPane.showMessageDialog(null, "Ya est√° dado de alta en esta materia", "Error",ERROR_MESSAGE);
           break;
        }
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listCarga = new javax.swing.JList<>();
        buttonAlta = new javax.swing.JButton();
        buttonBaja = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMateria2 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setViewportView(listCarga);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 47, 145, 161));

        buttonAlta.setForeground(new java.awt.Color(255, 255, 255));
        buttonAlta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bVerde.png"))); // NOI18N
        buttonAlta.setText("Dar de alta");
        buttonAlta.setBorder(null);
        buttonAlta.setBorderPainted(false);
        buttonAlta.setContentAreaFilled(false);
        buttonAlta.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonAlta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAltaActionPerformed(evt);
            }
        });
        jPanel1.add(buttonAlta, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 220, 90, 30));

        buttonBaja.setForeground(new java.awt.Color(255, 255, 255));
        buttonBaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bRojo.png"))); // NOI18N
        buttonBaja.setText("Dar de baja");
        buttonBaja.setBorder(null);
        buttonBaja.setBorderPainted(false);
        buttonBaja.setContentAreaFilled(false);
        buttonBaja.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBajaActionPerformed(evt);
            }
        });
        jPanel1.add(buttonBaja, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 90, 30));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Cargadas");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 24, -1, -1));

        jScrollPane2.setViewportView(listMateria2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 47, 145, 161));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Disponibles");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 24, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondoVentana4.jpg"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -10, 390, 300));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAltaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAltaActionPerformed
    contador = 0;
    int seleccionMateria = listMateria2.getSelectedIndex();// guardamos la materia seleccionada en el JList (materia a cargar)

    float calif = (float)0; //inicializamos la calificacion en la materia 
    verificar(seleccionMateria);
  if(contador ==0){
   if (seleccionMateria != -1){
            String id = listMateria.getMateria(seleccionMateria).getId(); //guardamos el ID de la materia a cargar
            listAlumno.getAlumno(seleccionAlum).getHashCalif().put(id, calif);// calificacion default del alumno en la materia en el hash
            Materia m = listMateria.getMateria(seleccionMateria);// obtenemos la materia en la posicion seleccionada
            list_model.addMateria(m);       // agregamos la materia seleccionada al nuevo arrayList del alumno
            Alumno a = listAlumno.getAlumno(seleccionAlum); //ahora buscamos el alumno seleccionado y lo guardamos en otra variable
            listMateria.getMateria(seleccionMateria).getAlumnosList().addAlumno(a); //agregamos el alumno a la materia
    }else{
            JOptionPane.showMessageDialog(null, "Seleccione un alumno");
     }
   }
    }//GEN-LAST:event_buttonAltaActionPerformed

    private void buttonBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBajaActionPerformed
        int index = -1;
        int index2 = -1;
        int seleccionMateria = listCarga.getSelectedIndex();//indice de la materia a eliminar
        
        
      
        if (seleccionMateria != -1){
        Materia m = list_model.getMateria(seleccionMateria);//pasamos la materia a eliminar a otra variable
        Alumno a = listAlumno.getAlumno(seleccionAlum);//alumno seleccionado
            list_model.eliminarMateria(seleccionMateria);
            for (Materia materia : listMateria.getListMateria()) {
                 if (materia.getNombre().equals(m.getNombre())
                    && materia.getId().equals(m.getId())) {
                    index = listMateria.getListMateria().indexOf(materia); //guardamos el indice de la materia
                     for (Alumno alumno : listAlumno.getListAlumno()) {
                          if (alumno.getNombre().equals(a.getNombre())
                    && alumno.getId().equals(a.getId())) {
                              index2 = listAlumno.getListAlumno().indexOf(alumno);//guardamos el indice del alumno
                              listMateria.getMateria(index).getAlumnosList().eliminarAlumno(index2);     
                          }
                    } 
                 } 
            } 
        JOptionPane.showMessageDialog(null,"El alumno "+ listAlumno.getAlumno(seleccionAlum).getNombre()+"\n "+
               "se ha dado de baja correctamente de "+listMateria.getMateria(index).getNombre(),"Mensaje",INFORMATION_MESSAGE);
        } 
    }//GEN-LAST:event_buttonBajaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AltaAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AltaAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AltaAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AltaAlumnos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AltaAlumnos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAlta;
    private javax.swing.JButton buttonBaja;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listCarga;
    private javax.swing.JList<String> listMateria2;
    // End of variables declaration//GEN-END:variables
}
